<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>Example: Leaflet Vector Data Imported as GeoJSON Files</title>

<link rel="stylesheet" type="text/css" href="Leaflet_0_4_5/dist/leaflet.css"/>
<link rel="stylesheet" type="text/css" href="all.css" />

<script type="text/javascript" src="../js/Leaflet_0_4_5/dist/leaflet.js"></script>

<script type="text/javascript" src="http://maps.google.com/maps/api/js?v=3&sensor=true"></script>
<script src="leaflet-plugins/layer/tile/Google.js"></script>

<script src="tip_lines.js" ></script>

</head>

<body>
	<div id="header">
		<h2 class="title">Example: Leaflet Vector Data Imported as GeoJSON Files</h2>
    </div> 

	<div id="map"></div>

   <script>

 		var map, tipLines;	
 				
 		var ggl_road = new L.Google('ROADMAP');
 		var ggl_aerial = new L.Google('SATELLITE');		
		var mapquestUrl = 'http://otile{s}.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.png',
			mapquestAttribution = "Data CC-By-SA by <a href='http://openstreetmap.org/' target='_blank'>OpenStreetMap</a>, Tiles Courtesy of <a href='http://open.mapquest.com' target='_blank'>MapQuest</a>",
			mapquest = new L.TileLayer(mapquestUrl, {maxZoom: 18, attribution: mapquestAttribution, subdomains: ['1','2','3','4']});
		
		
		// properties set on each feature of a Leaflet layer object
		function onEachFeature(feature, layer) {
			layer.on({
            mouseover: hoverAction,
            mouseout: resetHighlight
            });
    		// does this feature have a property named popupContent?
    		if (feature.properties) {
	        	layer.bindPopup(
	        		'<div class="infoHeader">' + '<b>' +feature.properties.projectname +'</b>' +
					'</div><div class="infoContent">' + 'Project Type:  ' + '<b>' +feature.properties.projecttype +'</b>' +
					'<div class="infoContent">' + 'TIP-ID:  ' + '<b>' +feature.properties.tipid +'</b>' +
					'</div><div class="infoContent">' + 'TIP Year:  ' + '<b>' +feature.properties.tipyear +'</b>' +
					'</div><div class="infoContent">' + '<i>' + '~ Amounts in $1,000s ~' + '</i>' + '</div>' + '</b>' + 
					'</div><div class="infoContent">' + 'Federal:  ' + '<b>' + '$' +feature.properties.federalfund + '</b>' + 
					'</div><div class="infoContent">' +  'State:  ' + '<b>' + '$' +feature.properties.statefund + '</b>' + 
					'</div><div class="infoContent">' +  'Local:  ' + '<b>' + '$' +feature.properties.localfund + '</b>' + 
					'</div><div class="infoContent">' +  'Total Funding:  ' + '<b>' + '$' +feature.properties.totalfund + '</b>' + 
					 '<div class="tipLink"><a href="https://www3.drcog.org/trips/Project/2012-2017/details/'+feature.properties.tipprojectversionid+'" target="_blank">Additional Information</a></div>',
					 {maxWidth: 400}
					);
    		 }
		}	
		
		// action to perform when mousing over a feature
		function hoverAction(e) {
		    layer = e.target;
		
		    // highlight the feature
		    layer.setStyle({ 
		        weight: 7,
		        color: 'yellow',
		        dashArray: '',
		        fillOpacity: 0.6
		    }); 		    
		}
		
		// action to perform when mousing off of a feature 
		function resetHighlight(e) {
		    var layer = e.target;
		    
		    // reset to the original style
		    layer.setStyle({ 
		        weight: 4,
		        color: 'black'
		    });		 		   
		}			
		
		// define the default feature style
		var tipLineStyle = {
    		"color": "black",
    		"weight": 4,
    		"opacity": 1
		};
	
	
		//add geojson lines with popup and style
		var tipLines = new L.GeoJSON(lines, {
				style: tipLineStyle,
				onEachFeature: onEachFeature		
		});
		
		// initialize the Leaflet map object
		map = new L.Map('map', {
			center: new L.LatLng(39.79, -464.97), 
			zoom: 9,
			zoomAnimation: false,
			layers: [ggl_road],
			zoomControl: true
		});
		
		// add overlays to the map object	
		map.addLayer(tipLines);
					
			
		// define the base layer switcher
		var baseMaps = {
			"Google Roads": ggl_road,
			"Google Aerial": ggl_aerial,
			"mapquest": mapquest
			};
			
		// define the overlay layer switcher
		var overlays = {
			"TIP Lines": tipLines
			}; 
			
		// adds the layer switcher control
		map.addControl(new L.control.layers(baseMaps,overlays));

   </script>  
   
</body>
</html>
